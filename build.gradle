apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = 'core.demo'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
            content {
                includeGroup 'core.framework'
            }
        }
    }

//    sourceSets {
//        dev {
//            java {
//                srcDir 'src/dev/java'
//            }
//            compileClasspath += sourceSets.main.runtimeClasspath
//            runtimeClasspath += sourceSets.main.runtimeClasspath
//        }
//    }
}

def coreNGVersion = '7.4.1'
def hsqlVersion = '2.5.0'
def jacksonVersion = '2.10.3'
def mysqlVersion = '8.0.20'


configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-mongo-migration') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
    }
    tasks.register('mongoMigrate') {
        dependsOn run
    }
}

configure(subprojects.findAll { it.name.matches('.*-service-interface') }) {
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
        implementation "core.framework:core-ng:${coreNGVersion}"
    }
}

configure([project(':demo-service'),
           project(':db-service'),
           project(':back-office-service'),
           project(':customer-service')]) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
    }
}

configure(project(':customer-service')) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation project(':customer-service-interface')
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}
project(':db-service') {
    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
    }
}

project(':back-office-service') {
    dependencies {
        implementation project(':customer-service-interface')
        implementation project(':back-office-service-interface')
    }
}

project(':back-office-service-interface') {
    dependencies {
        implementation project(':customer-service-interface')
    }
}
//configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
//    apply from: file("${rootDir}/gradle/db-migration.gradle")
//
//    dependencies {
//        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
//    }
//}
//
//configure(subprojects.findAll { it.name.endsWith('-es-migration') }) {
//    apply from: file("${rootDir}/gradle/app.gradle")
//    dependencies {
//        implementation "core.framework:core-ng:${coreNGVersion}"
//        implementation "core.framework:core-ng-search:${coreNGVersion}"
//    }
//    tasks.register('esMigrate') {
//        dependsOn run
//    }
//}
//
//configure(subprojects.findAll { it.name.endsWith('-mongo-migration') }) {
//    apply from: file("${rootDir}/gradle/app.gradle")
//    dependencies {
//        implementation "core.framework:core-ng:${coreNGVersion}"
//        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
//    }
//    tasks.register('mongoMigrate') {
//        dependsOn run
//    }
//}
//
//configure(subprojects.findAll { it.name.matches('.*-service-interface') }) {
//    dependencies {
//        implementation "core.framework:core-ng-api:${coreNGVersion}"
//    }
//}
//
//configure([project(':demo-service'),
//           project(':demo-site')]) {
//    apply from: file("${rootDir}/gradle/app.gradle")
//    dependencies {
//        implementation "core.framework:core-ng:${coreNGVersion}"
//        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
//    }
//}
//
//project(':demo-service') {
//    dependencies {
//        implementation project(':demo-service-interface')
//        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
//        testRuntimeOnly "org.hsqldb:hsqldb:${hsqlVersion}"
//    }
//}

//project(':demo-site') {
//}

//project(':benchmark') {
//    dependencies {
//        implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.22'
//        implementation "core.framework:core-ng:${coreNGVersion}"
//        implementation 'io.undertow:undertow-core:2.1.1.Final'
//        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
//        implementation "com.fasterxml.jackson.module:jackson-module-afterburner:${jacksonVersion}"
//    }
//}
