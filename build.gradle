apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = 'core.demo'
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
            content {
                includeGroup 'core.framework'
            }
        }
    }

//    sourceSets {
//        dev {
//            java {
//                srcDir 'src/dev/java'
//            }
//            compileClasspath += sourceSets.main.runtimeClasspath
//            runtimeClasspath += sourceSets.main.runtimeClasspath
//        }
//    }
}

def coreNGVersion = '7.4.1'
def hsqlVersion = '2.5.0'
def mysqlVersion = '8.0.20'


configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")
    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-mongo-migration') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
    }
    tasks.register('mongoMigrate') {
        dependsOn run
    }
}

configure(subprojects.findAll { it.name.matches('.*-service-interface') }) {
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
        implementation "core.framework:core-ng:${coreNGVersion}"
    }
}

//services use db
configure ([project(':customer-service'),
            project(':db-service')]) {
//    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
        testRuntimeOnly "org.hsqldb:hsqldb:${hsqlVersion}"
    }
}

//services use mongo
configure (project(':db-service')) {
//    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng-mongo:${coreNGVersion}"
        testImplementation "core.framework:core-ng-mongo-test:${coreNGVersion}"
    }
}

configure([project(':demo-service'),
           project(':db-service'),
           project(':customer-service'),
           project(':back-office-service'),
           project(':web-site')]) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
    }
}

configure(project(':customer-service')) {
    dependencies {
        implementation project(':customer-service-interface')
    }
}

project(':back-office-service') {
    dependencies {
        implementation project(':customer-service-interface')
        implementation project(':back-office-service-interface')
    }
}

project(':web-site') {
    dependencies {
        implementation project(':customer-service-interface')
        implementation project(':web-site-interface')
    }
}

project(':web-site-interface') {
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
        implementation "core.framework:core-ng:${coreNGVersion}"
    }
}

project(':demo-async') {
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation project(':demo-async-service-interface')
    }
}